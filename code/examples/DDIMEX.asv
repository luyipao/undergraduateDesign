addpath('..\src');
addpath('..\src\functions');

setParameters
a = 0;
b = 0.6;
n = 2;
order = 2;
nSteps = zeros(2,5);
N = [25 50 100 200 400 800];
% t = [1.2e-3, 1.8e-3, 2.4e-3, 3.0e-3, 3.6e-3]/3;
t = 1.2e-3;
% M = cell(length(N),length(t));

%% get exact solution
% Fmesh = Mesh2(a,b,3200,@(x) dopingFunction(x),n);
% Fmesh.t = t;
% [Fmesh, exactnSteps] = Fmesh.IMEXGK(3);
% exactSolution = Fmesh.getBasisPolys(Fmesh.coeffs);
%%
for i = 1:length(N)
    for j = 1:length(t)
        mesh = Mesh2(a,b,N(i),@(x) dopingFunction(x),n);
        mesh.t = t(j);
        [mesh, nSteps(i,j)] = mesh.IMEXGK(2);
        IMEX2M{i,j} = mesh;
        x = linspace(0,0.6,1000);
        
        
        % Generate a filename with N and t
        electronConcentration = mesh.getBasisPolys(mesh.coeffs);
        plot(x,electronConcentration.solve(x));
        filename1 = sprintf('DDIMEXRK%dDegree%dmeshCells%dElectronConcentration_t%g.pdf',order,n, N(i), t(j));
        filename1 = fullfile('..\docs\images', filename1);
        exportgraphics(gcf, filename1, 'ContentType', 'vector');
        

        % Generate another filename with N and t
        E = mesh.getBasisPolys(mesh.Ecoeffs);
        plot(x,E.solve(x));
        filename2 = sprintf('DDIMEXRK%dDegree%dmeshCells%d_E_t%g.pdf',order, n, N(i), t(j));
        filename2 = fullfile('..\docs\images', filename2);
        exportgraphics(gcf, filename2, 'ContentType', 'vector');
    end
end

for i = 1:length(N)
    for j = 1:length(t)
        f = IMEX2M{i,j}.getBasisPolys(IMEX2M{i,j}.coeffs);
        x = linspace(a,b,1000);
        E(i,j) = sqrt(sum((f.solve(x)-exactSolution.solve(x)).^2)./sum(exactSolution.solve(x).^2));
    end
end
order = (E(1:end-1))./E(2:end);
order = log2(order);
order = num2str(order,'%.2f');
order = ['----'; order] ;
T = table(N', num2str(E, '%.2e'),order );
filename = sprintf('..\\docs\\tables\\DDIMEXRK2Degree%d.tex', n);
table2latex(T,filename)
